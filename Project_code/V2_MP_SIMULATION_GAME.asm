.MODEL HUGE
.STACK 64
.DATA
;ARRAY_INSTRUCTIONS_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
ARRAY_INSTRUCTIONS_NAME  db			 ' MOV  ADD  SUB  DIV  MUL  ADC  SBB  SHL  SHR  ROL  ROR  INC  DEC  AND  XOR  OR  '

;ARRAY_REGISTERS_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
ARRAY_REGISTERS_NAME  db   			 ' AX   BX   CX   DX   SI   DI   SP   BP   AH   AL   BH   BL   CH   CL   DH   DL  '

;ARRAY_VALUES_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
ARRAY_VALUES_NAME  db                '  0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F  '

;OPERAND1_ARRAY_ADDRESS_MODE_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
OPERAND1_ARRAY_ADDRESS_MODE_NAME  db '             DIRECT             REGISTER INDIRECT             REGESTER          '

;OPERAND2_ARRAY_ADDRESS_MODE_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
OPERAND2_ARRAY_ADDRESS_MODE_NAME  db '        DIRECT        REGISTER INDIRECT        REGESTER        IMMIDIATE        '

;LEVEL1_ARRAY_POWERS_UP_NAME @ INTIAL CURSER POINT COLOMN= 0->7 & ROW=3->27
LEVEL1_ARRAY_POWERS_UP_NAME  db		 ' CLEAR           SEND            CHAT            POWER_1         POWER_2         POWER_3         POWER_4                                                        PLAYER_1 HUNT:00        PLAYER_2 HUNT:00'

;LEVEL2_ARRAY_POWERS_UP_NAME @ INTIAL CURSER POINT COLOMN= 0->7 & ROW=3->27
LEVEL2_ARRAY_POWERS_UP_NAME  db		 ' CLEAR           SEND            CHAT            POWER_1         POWER_2         POWER_3         POWER_4         POWER_5        PLAYER_1        PLAYER_2        PLAYER_1 HUNT:00        PLAYER_2 HUNT:00'

;PLAYER_1_CHAT_MASSEGE @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=28
PLAYER_1_CHAT_MASSEGE  db			 '                :                                                               '

;PLAYER_2_CHAT_MASSEGE @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=29
PLAYER_2_CHAT_MASSEGE  db			 '                :                                                               '

;MAIN_GAME_NAME_SCORE_GOAL @ INTIAL CURSER POINT COLOMN= 8->79 & ROW=3
MAIN_GAME_NAME_SCORE_GOAL  db		 '                  : 0 0 0   GOAL:" 1 0 5 E "                   : 0 0 0  '
;EXAMPLE_MAIN_GAME_NAME_SCORE_GOAL DB'  OMAR KHALED ALI : 0 0 0   GOAL:" 1 0 5 E "   OMAR KHALED ALI : 0 0 0  '

;PLAYER_REGISTERS_AX_SI @ INTIAL CURSER POINT COLOMN= 8->34 + 44->70 & ROW=6
PLAYER_REGISTERS_AX_SI  db			 '    AX               SI    '

;PLAYER1_REGISTERS_AX_SI_VALUE @ INTIAL CURSER POINT COLOMN= 8->34 & ROW=8
PLAYER1_REGISTERS_AX_SI_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER2_REGISTERS_AX_SI_VALUE @ INTIAL CURSER POINT COLOMN= 44->70 & ROW=8
PLAYER2_REGISTERS_AX_SI_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER_REGISTERS_BX_DI @ INTIAL CURSER POINT COLOMN= 8->34 + 44->70 & ROW=11
PLAYER_REGISTERS_BX_DI  db			 '    BX               DI    '

;PLAYER1_REGISTERS_BX_DI_VALUE @ INTIAL CURSER POINT COLOMN= 8->34 & ROW=13
PLAYER1_REGISTERS_BX_DI_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER2_REGISTERS_BX_DI_VALUE @ INTIAL CURSER POINT COLOMN= 44->70 & ROW=13
PLAYER2_REGISTERS_BX_DI_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER_REGISTERS_CX_SP @ INTIAL CURSER POINT COLOMN= 8->34 + 44->70 & ROW=16
PLAYER_REGISTERS_CX_SP  db			 '    CX               SP    '

;PLAYER1_REGISTERS_CX_SP_VALUE @ INTIAL CURSER POINT COLOMN= 8->34 & ROW=18
PLAYER1_REGISTERS_CX_SP_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER2_REGISTERS_CX_SP_VALUE @ INTIAL CURSER POINT COLOMN= 44->70 & ROW=18
PLAYER2_REGISTERS_CX_SP_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER_REGISTERS_DX_BP @ INTIAL CURSER POINT COLOMN= 8->34 + 44->70 & ROW=21
PLAYER_REGISTERS_DX_BP  db			 '    DX               BP    '

;PLAYER1_REGISTERS_DX_BP_VALUE @ INTIAL CURSER POINT COLOMN= 8->34 & ROW=23
PLAYER1_REGISTERS_DX_BP_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER2_REGISTERS_DX_BP_VALUE @ INTIAL CURSER POINT COLOMN= 44->70 & ROW=23
PLAYER2_REGISTERS_DX_BP_VALUE  db	 '  0 0 0 0         0 0 0 0  '

;PLAYER_1_COMMAND_MASSEGE @ INTIAL CURSER POINT COLOMN= 8->34 & ROW=26
PLAYER_1_COMMAND_MASSEGE db          '                           '

;PLAYER_2_COMMAND_MASSEGE @ INTIAL CURSER POINT COLOMN= 44->70 & ROW=26
PLAYER_2_COMMAND_MASSEGE db          '                           '
;EXAMPLE PLAYER_1_COMMAND_MASSEGE db '  MOV   [AX]   ,   FFFF H  '

;PLAYER_1_MEMORY_VALUES @ INTIAL CURSER POINT COLOMN= 35->43 & ROW=5->20
PLAYER_1_MEMORY_VALUES db            ' 0 0 : 0  0 0 : 1  0 0 : 2  0 0 : 3  0 0 : 4  0 0 : 5  0 0 : 6  0 0 : 7  0 0 : 8  0 0 : 9  0 0 : A  0 0 : B  0 0 : C  0 0 : D  0 0 : E  0 0 : F '

;PLAYER_2_MEMORY_VALUES @ INTIAL CURSER POINT COLOMN= 71->79 & ROW=5->20
PLAYER_2_MEMORY_VALUES db            ' 0 0 : 0  0 0 : 1  0 0 : 2  0 0 : 3  0 0 : 4  0 0 : 5  0 0 : 6  0 0 : 7  0 0 : 8  0 0 : 9  0 0 : A  0 0 : B  0 0 : C  0 0 : D  0 0 : E  0 0 : F '

;TESTT  db			         '00000000001111111111222222222233333333334444444444555555555566666666667777777777'
;TESTT  db			         '01234567890123456789012345678901234567890123456789012345678901234567890123456789'

RECTANGLE_INTIAL_X DW 0
RECTANGLE_INTIAL_Y DW 0
RECTANGLE_COLOR DB 0
RECTANGLE_LENGTH DW 0
RECTANGLE_HIEGHT DW 0

HORIZONTAL_LINE_INTIAL_X DW 0
HORIZONTAL_LINE_INTIAL_Y DW 0
HORIZONTAL_LINE_COLOR DB 0
HORIZONTAL_LINE_LENGTH DW 0

VERTICAL_LINE_INTIAL_X DW 0
VERTICAL_LINE_INTIAL_Y DW 0
VERTICAL_LINE_COLOR DB 0
VERTICAL_LINE_HIEGHT DW 0

INTIAL_COL_CURSER DB 0
INTIAL_ROW_CURSER DB 0
CHARACTER_COLOR DB 0
FINAL_COL_CURSER DB 0
FINAL_ROW_CURSER DB 0


COMMAND_LIST DB 0 ;number to choose list 

.CODE
MAIN  PROC FAR 
;INTIALIZE
	MOV AX,@DATA
	MOV DS,AX
;GRAPHICS MODE INTIALIZATION
	MOV AL,12H ;640*480 PIXELES 80*30 CHARACTERS ; 80 COLOMN * 30 ROW FOR CURSER POSITION
	MOV AH,0
    INT 10H ;GRAPHIC MODE SCREEN
	;;//VERY IMPORTANT NOTE//;; >> TO PRINT CHARACTER IN GRAPHIC MODE CHOOSE COLOR & SET CURSER POSITION FINAALY USE INT 10H/AH=0EH
	;;//VERY IMPORTANT NOTE//;; >> THE CHARACTER DIMINTIONS IS 8*16 PIXELES
	CALL UPDATE_COMMAND_LIST
PPP:
	mov ax, 3
    int 33h
	CMP BX,1
	JNE PPP
HLT

MAIN ENDP
	
	
DROW_RECTANGLE PROC NEAR
	         
             MOV CX,RECTANGLE_INTIAL_X ;X INITIAL POSITION
			 MOV DX,RECTANGLE_INTIAL_Y ;Y  INITIAL POSITION
	        
		DROW_RECTANGLE_HORIZONTAL:
	        
	         MOV AH,0CH ; DRAW PIXEL
			 MOV AL,RECTANGLE_COLOR  ; PIXEL COLOR
			 MOV BH,00H ;PAGE NUMB.
			 INT 10H ; DRAW PIXEL
			 
			 INC CX
			 CMP CX,RECTANGLE_LENGTH
			 JNE DROW_RECTANGLE_HORIZONTAL
			 ;---DROW_RECTANGLE_VERTICALLY
			 MOV CX,RECTANGLE_INTIAL_X ; BACK TO INITIAL			 
			 INC DX
			 CMP DX,RECTANGLE_HIEGHT
			 JNE DROW_RECTANGLE_HORIZONTAL
			 
	      RET
	   DROW_RECTANGLE ENDP
	   
DROW_HORIZONTAL_LINE PROC NEAR
	         
             MOV CX,HORIZONTAL_LINE_INTIAL_X ;X INITIAL POSITION
			 MOV DX,HORIZONTAL_LINE_INTIAL_Y ;Y  INITIAL POSITION
	        
		DROW_HORIZONTAL:
	        
	         MOV AH,0CH ; DRAW PIXEL
			 MOV AL,HORIZONTAL_LINE_COLOR  ; PIXEL COLOR
			 MOV BH,00H ;PAGE NUMB.
			 INT 10H ; DRAW PIXEL
			 
			 INC CX
			 CMP CX,HORIZONTAL_LINE_LENGTH
			 JNE DROW_HORIZONTAL			
			 
	      RET
	   DROW_HORIZONTAL_LINE ENDP
DROW_VERTICAL_LINE PROC NEAR
	         
             MOV CX,VERTICAL_LINE_INTIAL_X ;X INITIAL POSITION
			 MOV DX,VERTICAL_LINE_INTIAL_Y ;Y  INITIAL POSITION
	        
		DROW_VERTICAL:
	        
	         MOV AH,0CH ; DRAW PIXEL
			 MOV AL,VERTICAL_LINE_COLOR  ; PIXEL COLOR
			 MOV BH,00H ;PAGE NUMB.
			 INT 10H ; DRAW PIXEL
			 
			 INC CX
			 CMP CX,VERTICAL_LINE_HIEGHT
			 JNE DROW_VERTICAL			
			 
	      RET
	   DROW_VERTICAL_LINE ENDP
;INPUT : -> MAKE SI -OFFSET-> STRING
DISPLAY_STRING PROC NEAR
	         
			 
			 MOV DL,INTIAL_COL_CURSER ;Column
			 MOV DH,INTIAL_ROW_CURSER ;Row
             MOV BH,0 ;Display page
			 MOV BL,CHARACTER_COLOR
        DISPLAY_LOOP:
		     MOV AH,2 ;SetCursorPosition
			 INT 10H ;SetCursorPosition
			 
			 MOV AL,[SI]
			 MOV AH,0EH ;Teletype
			 INT 10H ; PRINT CHARACTER
			 ;NEXT STEP
			 INC DL
			 CMP DL,FINAL_COL_CURSER
			 JNE DISPLAY_LOOP
			 INC DH
			 CMP DH,FINAL_ROW_CURSER
			 JNE DISPLAY_LOOP
			
			
	      RET
	   DISPLAY_STRING ENDP

;INPUT :-> INTEGR_VARIABLE "COMMAND_LIST" IF 0-> ARRAY_INSTRUCTIONS_NAME || IF 1-> ARRAY_REGISTERS_NAME || IF 2-> ARRAY_VALUES_NAME  || IF 3-> OPERAND1_ARRAY_ADDRESS_MODE_NAME || IF 4-> OPERAND2_ARRAY_ADDRESS_MODE_NAME
UPDATE_COMMAND_LIST PROC NEAR
	         
			 ;CLEARING
			 MOV RECTANGLE_INTIAL_X ,0
			 MOV RECTANGLE_INTIAL_Y ,0
			 MOV RECTANGLE_COLOR ,0CH 
			 MOV RECTANGLE_LENGTH ,640
			 MOV RECTANGLE_HIEGHT,45
             ;CALL DROW_RECTANGLE
             ;CHOOSE WITCH DISPLAY			 
			 MOV AH,0
			 CMP COMMAND_LIST,AH
			 JE INSTRUCT
			 MOV AH,1
			 CMP COMMAND_LIST,AH
			 JE REGIST
			 MOV AH,2
			 CMP COMMAND_LIST,AH
			 JE VALUES
			 MOV AH,3
			 CMP COMMAND_LIST,AH
			 JE OP1
			 JMP OP2
		INSTRUCT:
		;ARRAY_INSTRUCTIONS_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
		     MOV INTIAL_COL_CURSER,0
			 MOV INTIAL_ROW_CURSER,1
			 MOV CHARACTER_COLOR ,2
			 MOV FINAL_COL_CURSER,80
			 MOV FINAL_ROW_CURSER,2
			 MOV SI,OFFSET ARRAY_INSTRUCTIONS_NAME 
			 CALL DISPLAY_STRING
			 JMP COMMAND_LIST_END
		REGIST:
		;ARRAY_REGISTERS_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
		     MOV INTIAL_COL_CURSER,0
			 MOV INTIAL_ROW_CURSER,1
			 MOV CHARACTER_COLOR ,2
			 MOV FINAL_COL_CURSER,80
			 MOV FINAL_ROW_CURSER,2
			 MOV SI,OFFSET ARRAY_REGISTERS_NAME 
			 CALL DISPLAY_STRING
             JMP COMMAND_LIST_END	
		VALUES:
		;ARRAY_VALUES_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
		     MOV INTIAL_COL_CURSER,0
			 MOV INTIAL_ROW_CURSER,1
			 MOV CHARACTER_COLOR ,2
			 MOV FINAL_COL_CURSER,80
			 MOV FINAL_ROW_CURSER,2
			 MOV SI,OFFSET ARRAY_VALUES_NAME 
			 CALL DISPLAY_STRING
			 JMP COMMAND_LIST_END
		OP1:
		;OPERAND1_ARRAY_ADDRESS_MODE_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
		     MOV INTIAL_COL_CURSER,0
			 MOV INTIAL_ROW_CURSER,1
			 MOV CHARACTER_COLOR ,2
			 MOV FINAL_COL_CURSER,80
			 MOV FINAL_ROW_CURSER,2
			 MOV SI,OFFSET OPERAND1_ARRAY_ADDRESS_MODE_NAME 
			 CALL DISPLAY_STRING
             JMP COMMAND_LIST_END
		OP2:
		;OPERAND2_ARRAY_ADDRESS_MODE_NAME @ INTIAL CURSER POINT COLOMN= 0->79 & ROW=1
		     MOV INTIAL_COL_CURSER,0
			 MOV INTIAL_ROW_CURSER,1
			 MOV CHARACTER_COLOR ,2
			 MOV FINAL_COL_CURSER,80
			 MOV FINAL_ROW_CURSER,2
			 MOV SI,OFFSET OPERAND2_ARRAY_ADDRESS_MODE_NAME 
			 CALL DISPLAY_STRING
			 
		COMMAND_LIST_END:			 
			 
			 
	      RET
	   UPDATE_COMMAND_LIST ENDP

	END MAIN   